/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.philimones.hds.explorer.installer;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author paul
 */
public class PanelReviewOutput extends javax.swing.JPanel implements IPage {

    private JFileChooser outputDirChooser;
    private File selectedOutputDir;
    
    /**
     * Creates new form PanelDatabase
     */
    public PanelReviewOutput() {
        initComponents();
        
        this.outputDirChooser = new JFileChooser();
        this.outputDirChooser.setCurrentDirectory(new File("."));
        this.outputDirChooser.setDialogTitle("Select the output directory");
        this.outputDirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        this.outputDirChooser.setAcceptAllFileFilterUsed(false);
    }

    private void openUrl(URI uri) {
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(uri);
            } catch (IOException ex) {
                Logger.getLogger(PanelReviewOutput.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblIcon = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblTitleInfo1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblHostname = new javax.swing.JLabel();
        txtOutputDir = new javax.swing.JTextField();
        btSelectDir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReviewConfig = new javax.swing.JTextPane();

        setMinimumSize(new java.awt.Dimension(701, 473));
        setPreferredSize(new java.awt.Dimension(701, 473));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hds-icon-1.png"))); // NOI18N

        lblTitle.setFont(new java.awt.Font("Gordita", 1, 16)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("Final step: Review and output");
        lblTitle.setToolTipText("");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblTitle.setMaximumSize(new java.awt.Dimension(230, 25));
        lblTitle.setMinimumSize(new java.awt.Dimension(230, 25));

        lblTitleInfo1.setText("Review the configuration file that is generated by the previous panels\n");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleInfo1)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(lblTitleInfo1))
                    .addComponent(lblIcon))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel3.setText("<html>This setup wizard will generate or update a WAR file of HDS-Explorer and also export an SQL file with statements to create a user and grant access</html>");

        lblHostname.setText("Output dir:");

        txtOutputDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutputDirActionPerformed(evt);
            }
        });

        btSelectDir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baseline_folder_open_black_24dp.png"))); // NOI18N
        btSelectDir.setText("select");
        btSelectDir.setToolTipText("");
        btSelectDir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSelectDir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSelectDir.setIconTextGap(3);
        btSelectDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelectDirActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(txtReviewConfig);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblHostname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOutputDir, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSelectDir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHostname)
                    .addComponent(txtOutputDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelectDir))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtOutputDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutputDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOutputDirActionPerformed

    private void btSelectDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelectDirActionPerformed
        selectOutputDirectory();
    }//GEN-LAST:event_btSelectDirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSelectDir;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitleInfo1;
    private javax.swing.JTextField txtOutputDir;
    private javax.swing.JTextPane txtReviewConfig;
    // End of variables declaration//GEN-END:variables

    @Override
    public ValidationResult validatePage() {
        
        if (selectedOutputDir == null) {           
            
            return new ValidationResult(ValidationType.ERROR, "Output directory is not choosen yet. Please choose an Output directory", this.btSelectDir);
        }
        
        
        return new ValidationResult(ValidationType.SUCCESS, "", null);
    }

    @Override
    public Map<String, String> exportValues() {
        return null;
    }

    void setReviewText(String reviewString) {
        txtReviewConfig.setText(reviewString);
    }

    private void selectOutputDirectory() {
        int result = this.outputDirChooser.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            this.selectedOutputDir = this.outputDirChooser.getSelectedFile();
            txtOutputDir.setText(this.selectedOutputDir.toString());
        }
        
    }
    
    public File getSelectedOutputDirectory() {
        return this.selectedOutputDir;
    }
}
